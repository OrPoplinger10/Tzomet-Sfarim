{"ast":null,"code":"import _asyncToGenerator from \"C:/Angular/Full Stack template Tzomet sfarim with angular/Frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { appConfig } from '../utils/app-config';\nimport { firstValueFrom } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class DataService {\n  constructor(http) {\n    this.http = http;\n  }\n  getAllAuthors() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const observable = _this.http.get(appConfig.authorsUrl);\n      const authors = yield firstValueFrom(observable);\n      return authors;\n    })();\n  }\n  getBooksBySearchText(searchText) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      const observable = _this2.http.get(appConfig.booksBySearchText + searchText);\n      const books = yield firstValueFrom(observable);\n      return books;\n    })();\n  }\n  addBook(book) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      const observable = _this3.http.get(appConfig.booksUrl, book);\n      yield firstValueFrom(observable);\n    })();\n  }\n  addBook(book) {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      const observable = _this4.http.get(appConfig.booksUrl, book);\n      yield firstValueFrom(observable);\n    })();\n  }\n}\nDataService.ɵfac = function DataService_Factory(t) {\n  return new (t || DataService)(i0.ɵɵinject(i1.HttpClient));\n};\nDataService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: DataService,\n  factory: DataService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AAEA,SAASA,SAAS,QAAQ,qBAAqB;AAC/C,SAASC,cAAc,QAAQ,MAAM;;;AAOrC,OAAM,MAAOC,WAAW;EAEpBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;EAAgB;EAE3BC,aAAa;IAAA;IAAA;MACtB,MAAMC,UAAU,GAAG,KAAI,CAACF,IAAI,CAACG,GAAG,CAAgBP,SAAS,CAACQ,UAAU,CAAC;MACrE,MAAMC,OAAO,SAASR,cAAc,CAACK,UAAU,CAAC;MAChD,OAAOG,OAAO;IAAC;EACnB;EAEaC,oBAAoB,CAACC,UAAkB;IAAA;IAAA;MAChD,MAAML,UAAU,GAAG,MAAI,CAACF,IAAI,CAACG,GAAG,CAAcP,SAAS,CAACY,iBAAiB,GAAGD,UAAU,CAAC;MACvF,MAAME,KAAK,SAASZ,cAAc,CAACK,UAAU,CAAC;MAC9C,OAAOO,KAAK;IAAC;EACjB;EAEaC,OAAO,CAACC,IAAe;IAAA;IAAA;MAChC,MAAMT,UAAU,GAAG,MAAI,CAACF,IAAI,CAACG,GAAG,CAAYP,SAAS,CAACgB,QAAQ,EAAED,IAAI,CAAC;MACpE,MAAMd,cAAc,CAACK,UAAU,CAAC;IAAC;EAEtC;EAEaQ,OAAO,CAACC,IAAe;IAAA;IAAA;MAChC,MAAMT,UAAU,GAAG,MAAI,CAACF,IAAI,CAACG,GAAG,CAAYP,SAAS,CAACgB,QAAQ,EAAED,IAAI,CAAC;MACpE,MAAMd,cAAc,CAACK,UAAU,CAAC;IAAC;EAEtC;;AA1BSJ,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAe,SAAXf,WAAW;EAAAgB,YAFR;AAAM","names":["appConfig","firstValueFrom","DataService","constructor","http","getAllAuthors","observable","get","authorsUrl","authors","getBooksBySearchText","searchText","booksBySearchText","books","addBook","book","booksUrl","factory","providedIn"],"sourceRoot":"","sources":["C:\\Angular\\Full Stack template Tzomet sfarim with angular\\Frontend\\src\\app\\services\\data.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { appConfig } from '../utils/app-config';\nimport { firstValueFrom } from \"rxjs\";\nimport AuthorModel from '../models/author-model';\nimport BookModel from '../models/book-model';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DataService {\n\n    constructor(private http: HttpClient) { }\n\n    public async getAllAuthors(): Promise<AuthorModel[]> {\n        const observable = this.http.get<AuthorModel[]>(appConfig.authorsUrl);\n        const authors = await firstValueFrom(observable);\n        return authors;\n    }\n\n    public async getBooksBySearchText(searchText: string): Promise<BookModel[]> {\n        const observable = this.http.get<BookModel[]>(appConfig.booksBySearchText + searchText);\n        const books = await firstValueFrom(observable);\n        return books;\n    }\n\n    public async addBook(book: BookModel): Promise<void> {\n        const observable = this.http.get<BookModel>(appConfig.booksUrl, book);\n         await firstValueFrom(observable);\n       \n    }\n\n    public async addBook(book: BookModel): Promise<void> {\n        const observable = this.http.get<BookModel>(appConfig.booksUrl, book);\n         await firstValueFrom(observable);\n       \n    }\n    \n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}