{"ast":null,"code":"import _asyncToGenerator from \"C:/Angular/Full Stack template Tzomet sfarim with angular/Frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { appConfig } from '../utils/app-config';\nimport { firstValueFrom } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class DataService {\n  constructor(http) {\n    this.http = http;\n  }\n  getAllAuthors() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const observable = _this.http.get(appConfig.dataUrl);\n      const data = yield firstValueFrom(observable);\n      return data;\n    })();\n  }\n}\nDataService.ɵfac = function DataService_Factory(t) {\n  return new (t || DataService)(i0.ɵɵinject(i1.HttpClient));\n};\nDataService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: DataService,\n  factory: DataService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AAEA,SAASA,SAAS,QAAQ,qBAAqB;AAC/C,SAASC,cAAc,QAAQ,MAAM;;;AAKrC,OAAM,MAAOC,WAAW;EAEpBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;EAAgB;EAE3BC,aAAa;IAAA;IAAA;MACtB,MAAMC,UAAU,GAAG,KAAI,CAACF,IAAI,CAACG,GAAG,CAAYP,SAAS,CAACQ,OAAO,CAAC;MAC9D,MAAMC,IAAI,SAASR,cAAc,CAACK,UAAU,CAAC;MAC7C,OAAOG,IAAI;IAAC;EAChB;;AARSP,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAQ,SAAXR,WAAW;EAAAS,YAFR;AAAM","names":["appConfig","firstValueFrom","DataService","constructor","http","getAllAuthors","observable","get","dataUrl","data","factory","providedIn"],"sourceRoot":"","sources":["C:\\Angular\\Full Stack template Tzomet sfarim with angular\\Frontend\\src\\app\\services\\data.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { appConfig } from '../utils/app-config';\nimport { firstValueFrom } from \"rxjs\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DataService {\n\n    constructor(private http: HttpClient) { }\n\n    public async getAllAuthors(): Promise<AuthorModel[]> {\n        const observable = this.http.get<MyModel[]>(appConfig.dataUrl);\n        const data = await firstValueFrom(observable);\n        return data;\n    }\n    \n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}